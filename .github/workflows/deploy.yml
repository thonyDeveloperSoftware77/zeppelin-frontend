name: Build and Deploy via Coolify

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted

    steps:
      # 1️⃣ Checkout del código
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Instalar dependencias con Bun
      - name: Install dependencies with Bun
        run: |
          bun install

      # 3️⃣ Construir el proyecto
      - name: Build project
        run: |
          bun run build

      # 4️⃣ Configurar Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 5️⃣ Log in en GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      # 6️⃣ Construir y empujar la imagen a GHCR con el tag correcto
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/jaimendo99/zeppelin-frontend:latest
            ghcr.io/jaimendo99/zeppelin-frontend:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]  # ⚠️ Asegúrate de que el job de build se llama "build"
    steps:
      # 7️⃣ Notificar a Coolify para que haga el despliegue
      - name: Notify deployment via Coolify
        run: |
          curl -X GET "http://62.146.226.103:8000/api/v1/deploy?uuid=${{ secrets.RESOURCE_UUID }}&force=false" \
          -H "Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}"
